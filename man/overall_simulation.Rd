% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation_funcs.R
\name{overall_simulation}
\alias{overall_simulation}
\title{Serosurvey simulation function}
\usage{
overall_simulation(individuals = 100, strains = c("H3N2", "H5N1", "H1N1"),
  strainIncidences, samplingTimes, processParams, y0s, startTime = 0,
  endTime = 200, addNoise = c(TRUE, TRUE), noiseParams = c(0.79, 0.2, 8),
  logTitre = FALSE, discreteData = TRUE,
  PROCESS_FUNCTION = multiple_strains, NOISE_FUNCTION = add_noise)
}
\arguments{
\item{individuals}{number of individuals to simulate. Defaults to 100}

\item{strains}{a vector of virus strain names to label the simulation data}

\item{strainIncidences}{a list of incidence vectors. Should match length of the strains vector (ie. each circulating strain has an incidence vector. Note that the range of these vectors should cover the entire study period. ie. go from 0 (the day of the first sample) to x (the day of the last sample).}

\item{processParams}{a generic vector of parameters to be passed to the data generating function.}

\item{y0s}{baseline readings for each individual. May simply be a matrix of zeroes.}

\item{startTime}{the start time of the survey. Defaults to 0}

\item{endTime}{the end time of the survey. Defaults to 200 (ie. 200 days)}

\item{addNoise}{if true, adds noise to the simulated data}

\item{noiseParams}{generic vector of parameters to pass to the noise generating function. Defaults to match \code{\link{add_noise}}}

\item{logTitre}{if TRUE, returns log transformed titre values. (5*2^y). This might be specific to HAI titre data, so might be best left to default as FALSE.}

\item{discreteData}{if TRUE, takes the floor of all generated data. Defaults to TRUE.}

\item{PROCESS_FUNCTION}{a pointer to the data generating process, taking the processParams as an argument. The function should take the following arguments: "infection_times" - a vector of times of infection with each strain; "y0" - a vector of initial values for each strain; processParams - as above; t - vector of times. This function should return a matrix of serological values matching the simulation data type. The first column should be time in days, and each subsequent column should be the measurement for each strain of interest on that day. See \code{\link{multiple_strains}} for an example.}

\item{NOISE_FUNCTION}{pointer to a noise adding function. Should take the value to be manipulated and a vector of function specific parameters (noiseParams). See \code{\link{add_noise}} for an example.}
}
\value{
a dataframe of the simulated serosurvey.
}
\description{
Simulates readings from a generic serosurvey. The function can take pointers to any data generating function and noise adding function to generate values generated from a custom process. A number of bools and parameters can be passed to customise the protocol.
}
\examples{
n <- 1000

inc_vectors <- NULL
inc_vectors[[1]] <- generate_toy_inc(0.4,900,200,600)
inc_vectors[[2]] <- generate_toy_inc(0.1,900,500,750)

samplingTimes <- matrix(ncol=2, nrow=n)
samplingTimes[,1] <- 0
samplingTimes[,2] <- 150

y0s <- matrix(ncol=2,nrow=n)
y0s[,1] <- 0
y0s[,2] <- 0

processParams <- list(mu_pars, tp_pars, m_pars)

y <- overall_simulation(n, c("A","B"), inc_vectors, samplingTimes, processParams, y0s, 0, 200, TRUE, c(0.8,0.1),TRUE,TRUE,multiple_strains, add_noise)
ERROR CHECKS
Create the matrix to store the data
Row for each individual
One column for each time point for each strain; one column for each time point.
Generate a cumulative risk of infection vector for each strain    
For each strain, generate a cumulative incidence vector
For each individual, generate an infection time for each strain and simulate
Generate an infection time for each strain
We assume that two infections can't happen on the same day, so check that this hasn't happened
   while(any(duplicated(infection_times))){
    for(j in 1:length(strainIncidences)){
     infection_times[j] <- generate_infection_time(infection_risks_inc[[j]])
}
}
Pass the infection times, process parameters, sampling times, starting values and strains to the data
generating function
If data is discrete, take floor of matrix
Add noise and log transform if required
First column in times
}
\seealso{
\code{\link{individual_simulation}}
}

